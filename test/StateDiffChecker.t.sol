// SPDX-License-Identifier: MIT
pragma solidity ^0.8.15;

import {Test} from "forge-std/Test.sol";
import {VmSafe} from "forge-std/Vm.sol";
import {stdJson} from "forge-std/StdJson.sol";
import {console2 as console} from "forge-std/console2.sol";
import {LibStateDiffChecker} from "script/LibStateDiffChecker.sol";
import {LibStateDiff} from "@eth-optimism-bedrock/scripts/libraries/LibStateDiff.sol";

contract Target {
    uint256 public x;
    address public y;
    mapping(uint256 => bytes32) public z;

    constructor() {
        x = 1;
    }

    function set() public {
        x = 0;
        y = address(0xabba);
        z[1] = hex"acdc";
    }
}

contract StateDiffChecker_Test is Test {
    Target public target;

    function setUp() public {
        target = new Target();
    }

    /// @dev Test that the sample testDiff.json is read and parsed correctly
    function test_parseDiffSpecs() public {
        string memory _path = "test/testDiff.json";
        string memory json = vm.readFile(_path);
        LibStateDiffChecker.StateDiffSpec memory diffSpec = LibStateDiffChecker.parseDiffSpecs(json);

        assertEq(diffSpec.chainId, 31337);
        assertEq(diffSpec.storageSpecs.length, 3);
        assertEq(diffSpec.storageSpecs[0].slot, bytes32(0));
        assertEq(diffSpec.storageSpecs[0].newValue, bytes32(0));
        assertEq(diffSpec.storageSpecs[1].slot, bytes32(uint256(1)));
        assertEq(diffSpec.storageSpecs[1].newValue, bytes32(uint256(uint160(address(0xabba)))));
        assertEq(diffSpec.storageSpecs[2].slot, keccak256(abi.encodePacked(uint256(1), uint256(2))));
        assertEq(diffSpec.storageSpecs[2].newValue, hex"acdc");
    }

    /// @dev Test that the state diff generated by running Target.set() matches the expected state diff
    ///      as defined in testDiff.json
    function test_checkStateDiff() public {
        vm.startStateDiffRecording();
        target.set();
        VmSafe.AccountAccess[] memory accountAccesses = vm.stopAndReturnStateDiff();

        string memory _path = "test/testDiff.json";
        string memory json = vm.readFile(_path);
        LibStateDiffChecker.StateDiffSpec memory expectedDiff = LibStateDiffChecker.parseDiffSpecs(json);

        // string memory json = stdJson.readFile(_path);
        // planning to do this in memory.
        LibStateDiffChecker.StateDiffSpec memory actualDiff =
            LibStateDiffChecker.extractDiffSpecFromAcccountAccesses(accountAccesses);
        LibStateDiffChecker.checkStateDiff(expectedDiff, actualDiff);
    }
}
